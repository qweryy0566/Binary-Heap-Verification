DIGEST 0c7b52b595fa6df99d08b0818c0129ae
Fcprogs.heap.swap.path0
R24:29 Coq.Strings.String <> <> lib
R31:34 Coq.Lists.List <> <> lib
R36:41 Coq.ZArith.ZArith <> <> lib
R73:78 compcert.lib.Coqlib <> <> lib
R80:87 compcert.lib.Integers <> <> lib
R89:94 compcert.lib.Floats <> <> lib
R96:98 compcert.common.AST <> <> lib
R100:105 compcert.cfrontend.Ctypes <> <> lib
R107:109 compcert.cfrontend.Cop <> <> lib
R111:116 compcert.cfrontend.Clight <> <> lib
R118:127 compcert.exportclight.Clightdefs <> <> lib
R145:160 Csplit.semantics <> <> lib
R178:199 utils.AClightNotations <> <> lib
R210:228 VST.floyd.proofauto <> <> lib
R246:263 FloydSeq.proofauto <> <> lib
R281:293 Csplit.strong <> <> lib
R311:332 FloydSeq.client_lemmas <> <> lib
R350:371 Csplit.strongSoundness <> <> lib
R389:406 Csplit.AClightFunc <> <> lib
R475:486 cprogs.heap.program <> <> lib
R504:519 cprogs.heap.definitions <> <> lib
R537:551 cprogs.heap.annotation <> <> lib
def 600:631 <> functional_correctness_statement
R659:668 VST.veric.juicy_extspec <> OracleKind class
binder 652:656 <> Espec:1
binder 671:671 <> x:2
binder 673:673 <> y:3
binder 675:677 <> px0:4
binder 679:681 <> py0:5
binder 683:684 <> a':6
binder 686:687 <> b':7
R711:726 cprogs.heap.annotation <> :::'Delta_specs_swap' not
binder 696:706 <> Delta_specs:8
R746:756 cprogs.heap.annotation <> :::'Delta_swap'_x not
R757:767 cprogs.heap.swap.path0 <> Delta_specs:8 var
binder 737:741 <> Delta:9
R774:778 Csplit.strong <> semax ind
R1225:1243 Csplit.semantics <> normal_split_assert def
R1246:1254 VST.veric.tycontext <> RA_normal proj
R1257:1272 VST.veric.SeparationLogic <> frame_ret_assert def
R1374:1386 VST.veric.SeparationLogic <> stackframe_of def
R1388:1393 cprogs.heap.program <> f_swap def
R1275:1298 VST.veric.SeparationLogic <> function_body_ret_assert def
R1307:1316 FloydSeq.canon <> :::'PROP'_'()'_x not
R1317:1327 FloydSeq.canon <> :::'LOCAL'_'()'_x not
R1328:1333 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1349:1352 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1368:1369 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1334:1343 cprogs.heap.definitions <> :::'store_int'_x_x not
R1347:1347 cprogs.heap.definitions <> :::'store_int'_x_x not
R1348:1348 cprogs.heap.swap.path0 <> y:3 var
R1344:1346 cprogs.heap.swap.path0 <> px0:4 var
R1353:1362 cprogs.heap.definitions <> :::'store_int'_x_x not
R1366:1366 cprogs.heap.definitions <> :::'store_int'_x_x not
R1367:1367 cprogs.heap.swap.path0 <> x:2 var
R1363:1365 cprogs.heap.swap.path0 <> py0:5 var
R1300:1304 compcert.exportclight.Clightdefs <> tvoid def
R899:907 compcert.cfrontend.Clight <> Ssequence constr
R968:976 compcert.cfrontend.Clight <> Ssequence constr
R1043:1051 compcert.cfrontend.Clight <> Ssequence constr
R1151:1157 compcert.cfrontend.Clight <> Sassign constr
R1200:1207 compcert.cfrontend.Clight <> Etempvar constr
R1212:1215 compcert.exportclight.Clightdefs <> tint def
R1209:1210 cprogs.heap.program <> _t def
R1160:1165 compcert.cfrontend.Clight <> Ederef constr
R1193:1196 compcert.exportclight.Clightdefs <> tint def
R1168:1175 compcert.cfrontend.Clight <> Etempvar constr
R1181:1184 compcert.exportclight.Clightdefs <> tptr def
R1186:1189 compcert.exportclight.Clightdefs <> tint def
R1177:1178 cprogs.heap.program <> _b def
R1062:1068 compcert.cfrontend.Clight <> Sassign constr
R1121:1128 compcert.cfrontend.Clight <> Etempvar constr
R1135:1138 compcert.exportclight.Clightdefs <> tint def
R1130:1133 cprogs.heap.program <> _t'1 def
R1071:1076 compcert.cfrontend.Clight <> Ederef constr
R1104:1107 compcert.exportclight.Clightdefs <> tint def
R1079:1086 compcert.cfrontend.Clight <> Etempvar constr
R1092:1095 compcert.exportclight.Clightdefs <> tptr def
R1097:1100 compcert.exportclight.Clightdefs <> tint def
R1088:1089 cprogs.heap.program <> _a def
R985:988 compcert.cfrontend.Clight <> Sset constr
R996:1001 compcert.cfrontend.Clight <> Ederef constr
R1029:1032 compcert.exportclight.Clightdefs <> tint def
R1004:1011 compcert.cfrontend.Clight <> Etempvar constr
R1017:1020 compcert.exportclight.Clightdefs <> tptr def
R1022:1025 compcert.exportclight.Clightdefs <> tint def
R1013:1014 cprogs.heap.program <> _b def
R990:993 cprogs.heap.program <> _t'1 def
R914:917 compcert.cfrontend.Clight <> Sset constr
R923:928 compcert.cfrontend.Clight <> Ederef constr
R956:959 compcert.exportclight.Clightdefs <> tint def
R931:938 compcert.cfrontend.Clight <> Etempvar constr
R944:947 compcert.exportclight.Clightdefs <> tptr def
R949:952 compcert.exportclight.Clightdefs <> tint def
R940:941 cprogs.heap.program <> _a def
R919:920 cprogs.heap.program <> _t def
R787:793 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R802:805 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R814:818 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R796:798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R794:795 cprogs.heap.swap.path0 <> b':7 var
R799:801 cprogs.heap.swap.path0 <> py0:5 var
R808:810 Coq.Init.Logic <> ::type_scope:x_'='_x not
R806:807 cprogs.heap.swap.path0 <> a':6 var
R811:813 cprogs.heap.swap.path0 <> px0:4 var
R819:825 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R836:837 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R848:851 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R826:829 FloydSeq.canon <> temp constr
R834:835 cprogs.heap.swap.path0 <> a':6 var
R831:832 cprogs.heap.program <> _a def
R838:841 FloydSeq.canon <> temp constr
R846:847 cprogs.heap.swap.path0 <> b':7 var
R843:844 cprogs.heap.program <> _b def
R852:857 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R873:876 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R892:893 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R858:867 cprogs.heap.definitions <> :::'store_int'_x_x not
R871:871 cprogs.heap.definitions <> :::'store_int'_x_x not
R872:872 cprogs.heap.swap.path0 <> x:2 var
R868:870 cprogs.heap.swap.path0 <> px0:4 var
R877:886 cprogs.heap.definitions <> :::'store_int'_x_x not
R890:890 cprogs.heap.definitions <> :::'store_int'_x_x not
R891:891 cprogs.heap.swap.path0 <> y:3 var
R887:889 cprogs.heap.swap.path0 <> py0:5 var
R780:784 cprogs.heap.swap.path0 <> Delta:9 var
