DIGEST 1397f9782ee5bc0b9871647fc8c1546b
Fcprogs.heap.annotation
R24:29 Coq.Strings.String <> <> lib
R31:34 Coq.Lists.List <> <> lib
R36:41 Coq.ZArith.ZArith <> <> lib
R73:78 compcert.lib.Coqlib <> <> lib
R80:87 compcert.lib.Integers <> <> lib
R89:94 compcert.lib.Floats <> <> lib
R96:98 compcert.common.AST <> <> lib
R100:105 compcert.cfrontend.Ctypes <> <> lib
R107:109 compcert.cfrontend.Cop <> <> lib
R111:116 compcert.cfrontend.Clight <> <> lib
R118:127 compcert.exportclight.Clightdefs <> <> lib
R145:160 Csplit.semantics <> <> lib
R178:199 utils.AClightNotations <> <> lib
R210:228 VST.floyd.proofauto <> <> lib
R246:263 FloydSeq.proofauto <> <> lib
R281:293 Csplit.strong <> <> lib
R311:332 FloydSeq.client_lemmas <> <> lib
R350:371 Csplit.strongSoundness <> <> lib
R389:406 Csplit.AClightFunc <> <> lib
R475:486 cprogs.heap.program <> <> lib
R504:519 cprogs.heap.definitions <> <> lib
def 533:541 <> ___return
R546:553 VST.veric.SeparationLogic <> ret_temp def
def 568:589 <> f_swap_spec_annotation
R596:611 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R629:632 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 612:612 <> y:1
binder 614:614 <> x:2
binder 616:618 <> py0:3
binder 620:622 <> px0:4
binder 624:625 <> a':5
binder 627:628 <> b':6
R633:634 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R742:747 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R811:812 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R635:641 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R650:653 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R662:666 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R644:646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R642:643 cprogs.heap.annotation <> b':6 var
R647:649 cprogs.heap.annotation <> py0:3 var
R656:658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R654:655 cprogs.heap.annotation <> a':5 var
R659:661 cprogs.heap.annotation <> px0:4 var
R667:673 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R684:685 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R696:699 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R674:677 FloydSeq.canon <> temp constr
R682:683 cprogs.heap.annotation <> a':5 var
R679:680 cprogs.heap.program <> _a def
R686:689 FloydSeq.canon <> temp constr
R694:695 cprogs.heap.annotation <> b':6 var
R691:692 cprogs.heap.program <> _b def
R700:705 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R721:724 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R740:741 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R706:715 cprogs.heap.definitions <> :::'store_int'_x_x not
R719:719 cprogs.heap.definitions <> :::'store_int'_x_x not
R720:720 cprogs.heap.annotation <> x:2 var
R716:718 cprogs.heap.annotation <> px0:4 var
R725:734 cprogs.heap.definitions <> :::'store_int'_x_x not
R738:738 cprogs.heap.definitions <> :::'store_int'_x_x not
R739:739 cprogs.heap.annotation <> y:1 var
R735:737 cprogs.heap.annotation <> py0:3 var
R748:757 FloydSeq.canon <> :::'PROP'_'()'_x not
R758:768 FloydSeq.canon <> :::'LOCAL'_'()'_x not
R769:774 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R790:793 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R809:810 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R775:784 cprogs.heap.definitions <> :::'store_int'_x_x not
R788:788 cprogs.heap.definitions <> :::'store_int'_x_x not
R789:789 cprogs.heap.annotation <> y:1 var
R785:787 cprogs.heap.annotation <> px0:4 var
R794:803 cprogs.heap.definitions <> :::'store_int'_x_x not
R807:807 cprogs.heap.definitions <> :::'store_int'_x_x not
R808:808 cprogs.heap.annotation <> x:2 var
R804:806 cprogs.heap.annotation <> py0:3 var
def 827:845 <> f_swap_spec_complex
R875:896 cprogs.heap.annotation <> f_swap_spec_annotation def
def 912:924 <> f_swap_funsig
R927:932 VST.veric.SeparationLogic <> funsig def
R939:939 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R985:986 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R992:992 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R957:960 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R940:940 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R943:945 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R955:956 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R941:942 cprogs.heap.program <> _a def
R946:949 compcert.exportclight.Clightdefs <> tptr def
R951:954 compcert.exportclight.Clightdefs <> tint def
R978:981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R961:961 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R964:966 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R976:977 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R962:963 cprogs.heap.program <> _b def
R967:970 compcert.exportclight.Clightdefs <> tptr def
R972:975 compcert.exportclight.Clightdefs <> tint def
R982:984 Coq.Init.Datatypes <> nil constr
R987:991 compcert.exportclight.Clightdefs <> tvoid def
def 1007:1015 <> swap_spec
R1042:1046 cprogs.heap.program <> _swap def
R1048:1060 cprogs.heap.annotation <> f_swap_funsig def
R1062:1080 cprogs.heap.annotation <> f_swap_spec_complex def
def 1096:1106 <> f_swap_hint
R1115:1128 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R1129:1150 cprogs.heap.annotation <> f_swap_spec_annotation def
binder 1109:1112 <> para:7
R1164:1167 cprogs.heap.annotation <> para:7 var
R1178:1178 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1180:1181 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1183:1184 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1188:1189 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1193:1194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1197:1198 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1201:1201 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1209:1217 Csplit.AClight <> Csequence constr
R1278:1286 Csplit.AClight <> Csequence constr
R1462:1468 Csplit.AClight <> Cassign constr
R1511:1518 compcert.cfrontend.Clight <> Etempvar constr
R1523:1526 compcert.exportclight.Clightdefs <> tint def
R1520:1521 cprogs.heap.program <> _t def
R1471:1476 compcert.cfrontend.Clight <> Ederef constr
R1504:1507 compcert.exportclight.Clightdefs <> tint def
R1479:1486 compcert.cfrontend.Clight <> Etempvar constr
R1492:1495 compcert.exportclight.Clightdefs <> tptr def
R1497:1500 compcert.exportclight.Clightdefs <> tint def
R1488:1489 cprogs.heap.program <> _b def
R1295:1303 Csplit.AClight <> Csequence constr
R1374:1380 Csplit.AClight <> Cassign constr
R1433:1440 compcert.cfrontend.Clight <> Etempvar constr
R1447:1450 compcert.exportclight.Clightdefs <> tint def
R1442:1445 cprogs.heap.program <> _t'1 def
R1383:1388 compcert.cfrontend.Clight <> Ederef constr
R1416:1419 compcert.exportclight.Clightdefs <> tint def
R1391:1398 compcert.cfrontend.Clight <> Etempvar constr
R1404:1407 compcert.exportclight.Clightdefs <> tptr def
R1409:1412 compcert.exportclight.Clightdefs <> tint def
R1400:1401 cprogs.heap.program <> _a def
R1314:1317 Csplit.AClight <> Cset constr
R1325:1330 compcert.cfrontend.Clight <> Ederef constr
R1358:1361 compcert.exportclight.Clightdefs <> tint def
R1333:1340 compcert.cfrontend.Clight <> Etempvar constr
R1346:1349 compcert.exportclight.Clightdefs <> tptr def
R1351:1354 compcert.exportclight.Clightdefs <> tint def
R1342:1343 cprogs.heap.program <> _b def
R1319:1322 cprogs.heap.program <> _t'1 def
R1224:1227 Csplit.AClight <> Cset constr
R1233:1238 compcert.cfrontend.Clight <> Ederef constr
R1266:1269 compcert.exportclight.Clightdefs <> tint def
R1241:1248 compcert.cfrontend.Clight <> Etempvar constr
R1254:1257 compcert.exportclight.Clightdefs <> tptr def
R1259:1262 compcert.exportclight.Clightdefs <> tint def
R1250:1251 cprogs.heap.program <> _a def
R1229:1230 cprogs.heap.program <> _t def
def 1551:1570 <> f_up_spec_annotation
R1577:1592 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R1625:1628 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 1593:1597 <> size0:9
binder 1599:1602 <> pos0:10
binder 1604:1605 <> a0:11
binder 1607:1613 <> Maxsize:12
binder 1615:1616 <> Hl:13
binder 1618:1619 <> a':14
binder 1621:1624 <> pos':15
R1629:1630 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1904:1908 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2042:2042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1631:1637 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1666:1669 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1677:1680 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1709:1712 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1725:1728 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1744:1747 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1759:1762 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1793:1796 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1811:1814 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1825:1829 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1642:1645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1665:1665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1638:1641 cprogs.heap.annotation <> pos':15 var
R1646:1649 compcert.common.Values <> Vint constr
R1652:1663 cprogs.heap.definitions <> :::'IntRepr' not
R1660:1663 cprogs.heap.annotation <> pos0:10 var
R1672:1674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1670:1671 cprogs.heap.annotation <> a':14 var
R1675:1676 cprogs.heap.annotation <> a0:11 var
R1681:1684 Coq.ZArith.BinInt Z le def
R1702:1708 cprogs.heap.annotation <> Maxsize:12 var
R1687:1691 Coq.ZArith.BinInt Z add def
R1693:1697 cprogs.heap.annotation <> size0:9 var
R1713:1716 Coq.ZArith.BinInt Z le def
R1720:1724 cprogs.heap.annotation <> size0:9 var
R1729:1732 Coq.ZArith.BinInt Z le def
R1739:1743 cprogs.heap.annotation <> size0:9 var
R1734:1737 cprogs.heap.annotation <> pos0:10 var
R1748:1751 Coq.ZArith.BinInt Z le def
R1755:1758 cprogs.heap.annotation <> pos0:10 var
R1763:1766 Coq.ZArith.BinInt Z le def
R1777:1790 compcert.lib.Integers Int max_signed def
R1768:1774 cprogs.heap.annotation <> Maxsize:12 var
R1797:1800 Coq.ZArith.BinInt Z le def
R1804:1810 cprogs.heap.annotation <> Maxsize:12 var
R1815:1821 cprogs.heap.definitions <> all_int def
R1823:1824 cprogs.heap.annotation <> Hl:13 var
R1830:1836 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1847:1848 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1863:1866 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1837:1840 FloydSeq.canon <> temp constr
R1845:1846 cprogs.heap.annotation <> a':14 var
R1842:1843 cprogs.heap.program <> _a def
R1849:1852 FloydSeq.canon <> temp constr
R1859:1862 cprogs.heap.annotation <> pos':15 var
R1854:1857 cprogs.heap.program <> _pos def
R1867:1872 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1902:1903 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1873:1888 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R1891:1891 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R1894:1894 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R1895:1901 cprogs.heap.annotation <> Maxsize:12 var
R1892:1893 cprogs.heap.annotation <> Hl:13 var
R1889:1890 cprogs.heap.annotation <> a0:11 var
R1910:1912 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R1926:1932 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R2033:2033 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 1913:1920 <> Hl_final:16
binder 1922:1925 <> pos1:17
R1933:1939 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1970:1976 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R1940:1941 cprogs.heap.definitions <> up def
R1962:1969 cprogs.heap.annotation <> Hl_final:16 var
R1957:1960 cprogs.heap.annotation <> pos1:17 var
R1952:1955 cprogs.heap.annotation <> pos0:10 var
R1946:1950 cprogs.heap.annotation <> size0:9 var
R1943:1944 cprogs.heap.annotation <> Hl:13 var
R1977:1989 FloydSeq.canon <> :::'LOCAL'_'()'_x not
R1990:1995 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R2031:2032 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1996:2011 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2014:2014 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2023:2023 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2024:2030 cprogs.heap.annotation <> Maxsize:12 var
R2015:2022 cprogs.heap.annotation <> Hl_final:16 var
R2012:2013 cprogs.heap.annotation <> a0:11 var
def 2057:2073 <> f_up_spec_complex
R2103:2122 cprogs.heap.annotation <> f_up_spec_annotation def
def 2138:2148 <> f_up_funsig
R2151:2156 VST.veric.SeparationLogic <> funsig def
R2163:2163 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2204:2205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2211:2211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2181:2184 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2164:2164 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2167:2169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2179:2180 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2165:2166 cprogs.heap.program <> _a def
R2170:2173 compcert.exportclight.Clightdefs <> tptr def
R2175:2178 compcert.exportclight.Clightdefs <> tint def
R2197:2200 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2185:2185 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2190:2191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2196:2196 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2186:2189 cprogs.heap.program <> _pos def
R2192:2195 compcert.exportclight.Clightdefs <> tint def
R2201:2203 Coq.Init.Datatypes <> nil constr
R2206:2210 compcert.exportclight.Clightdefs <> tvoid def
def 2226:2232 <> up_spec
R2259:2261 cprogs.heap.program <> _up def
R2263:2273 cprogs.heap.annotation <> f_up_funsig def
R2275:2291 cprogs.heap.annotation <> f_up_spec_complex def
def 2307:2315 <> f_up_hint
R2324:2337 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R2338:2357 cprogs.heap.annotation <> f_up_spec_annotation def
binder 2318:2321 <> para:18
R2371:2374 cprogs.heap.annotation <> para:18 var
R2385:2385 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2391:2392 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2397:2398 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2401:2402 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2410:2411 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2414:2415 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2418:2419 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2424:2424 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2432:2436 Csplit.AClight <> Cloop constr
R4288:4292 Csplit.AClight <> Cskip constr
R2443:2451 Csplit.AClight <> Csequence constr
R2879:2887 Csplit.AClight <> Csequence constr
R3046:3054 Csplit.AClight <> Csequence constr
R3673:3681 Csplit.AClight <> Csequence constr
R4168:4171 Csplit.AClight <> Cset constr
R4193:4198 compcert.cfrontend.Clight <> Ebinop constr
R4273:4276 compcert.exportclight.Clightdefs <> tint def
R4243:4252 compcert.cfrontend.Clight <> Econst_int constr
R4267:4270 compcert.exportclight.Clightdefs <> tint def
R4255:4262 compcert.lib.Integers Int repr def
R4206:4213 compcert.cfrontend.Clight <> Etempvar constr
R4220:4223 compcert.exportclight.Clightdefs <> tint def
R4215:4218 cprogs.heap.program <> _pos def
R4200:4203 compcert.cfrontend.Cop <> Oshr constr
R4173:4176 cprogs.heap.program <> _pos def
R3696:3700 Csplit.AClight <> Ccall constr
R3879:3879 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3967:3986 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3880:3885 compcert.cfrontend.Clight <> Ebinop constr
R3957:3960 compcert.exportclight.Clightdefs <> tptr def
R3962:3965 compcert.exportclight.Clightdefs <> tint def
R3919:3926 compcert.cfrontend.Clight <> Etempvar constr
R3933:3936 compcert.exportclight.Clightdefs <> tint def
R3928:3931 cprogs.heap.program <> _pos def
R3893:3900 compcert.cfrontend.Clight <> Etempvar constr
R3906:3909 compcert.exportclight.Clightdefs <> tptr def
R3911:3914 compcert.exportclight.Clightdefs <> tint def
R3902:3903 cprogs.heap.program <> _a def
R3887:3890 compcert.cfrontend.Cop <> Oadd constr
R3987:3987 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4144:4148 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3988:3993 compcert.cfrontend.Clight <> Ebinop constr
R4134:4137 compcert.exportclight.Clightdefs <> tptr def
R4139:4142 compcert.exportclight.Clightdefs <> tint def
R4044:4049 compcert.cfrontend.Clight <> Ebinop constr
R4127:4130 compcert.exportclight.Clightdefs <> tint def
R4097:4106 compcert.cfrontend.Clight <> Econst_int constr
R4121:4124 compcert.exportclight.Clightdefs <> tint def
R4109:4116 compcert.lib.Integers Int repr def
R4057:4064 compcert.cfrontend.Clight <> Etempvar constr
R4071:4074 compcert.exportclight.Clightdefs <> tint def
R4066:4069 cprogs.heap.program <> _pos def
R4051:4054 compcert.cfrontend.Cop <> Oshr constr
R4001:4008 compcert.cfrontend.Clight <> Etempvar constr
R4014:4017 compcert.exportclight.Clightdefs <> tptr def
R4019:4022 compcert.exportclight.Clightdefs <> tint def
R4010:4011 cprogs.heap.program <> _a def
R3995:3998 compcert.cfrontend.Cop <> Oadd constr
R4149:4151 Coq.Init.Datatypes <> nil constr
R3722:3725 compcert.cfrontend.Clight <> Evar constr
R3734:3742 compcert.cfrontend.Ctypes <> Tfunction constr
R3851:3860 compcert.common.AST <> cc_default def
R3845:3849 compcert.exportclight.Clightdefs <> tvoid def
R3773:3777 compcert.cfrontend.Ctypes <> Tcons constr
R3792:3796 compcert.cfrontend.Ctypes <> Tcons constr
R3810:3813 compcert.cfrontend.Ctypes <> Tnil constr
R3799:3802 compcert.exportclight.Clightdefs <> tptr def
R3804:3807 compcert.exportclight.Clightdefs <> tint def
R3780:3783 compcert.exportclight.Clightdefs <> tptr def
R3785:3788 compcert.exportclight.Clightdefs <> tint def
R3727:3731 cprogs.heap.program <> _swap def
R3702:3705 Coq.Init.Datatypes <> None constr
R3067:3075 Csplit.AClight <> Csequence constr
R3249:3257 Csplit.AClight <> Csequence constr
R3513:3523 Csplit.AClight <> Cifthenelse constr
R3653:3657 Csplit.AClight <> Cskip constr
R3630:3635 Csplit.AClight <> Cbreak constr
R3526:3531 compcert.cfrontend.Clight <> Ebinop constr
R3608:3611 compcert.exportclight.Clightdefs <> tint def
R3588:3595 compcert.cfrontend.Clight <> Etempvar constr
R3602:3605 compcert.exportclight.Clightdefs <> tint def
R3597:3600 cprogs.heap.program <> _t'2 def
R3538:3545 compcert.cfrontend.Clight <> Etempvar constr
R3552:3555 compcert.exportclight.Clightdefs <> tint def
R3547:3550 cprogs.heap.program <> _t'1 def
R3533:3535 compcert.cfrontend.Cop <> Ole constr
R3274:3277 Csplit.AClight <> Cset constr
R3301:3306 compcert.cfrontend.Clight <> Ederef constr
R3491:3494 compcert.exportclight.Clightdefs <> tint def
R3327:3332 compcert.cfrontend.Clight <> Ebinop constr
R3479:3482 compcert.exportclight.Clightdefs <> tptr def
R3484:3487 compcert.exportclight.Clightdefs <> tint def
R3386:3391 compcert.cfrontend.Clight <> Ebinop constr
R3472:3475 compcert.exportclight.Clightdefs <> tint def
R3442:3451 compcert.cfrontend.Clight <> Econst_int constr
R3466:3469 compcert.exportclight.Clightdefs <> tint def
R3454:3461 compcert.lib.Integers Int repr def
R3399:3406 compcert.cfrontend.Clight <> Etempvar constr
R3413:3416 compcert.exportclight.Clightdefs <> tint def
R3408:3411 cprogs.heap.program <> _pos def
R3393:3396 compcert.cfrontend.Cop <> Oshr constr
R3340:3347 compcert.cfrontend.Clight <> Etempvar constr
R3353:3356 compcert.exportclight.Clightdefs <> tptr def
R3358:3361 compcert.exportclight.Clightdefs <> tint def
R3349:3350 cprogs.heap.program <> _a def
R3334:3337 compcert.cfrontend.Cop <> Oadd constr
R3279:3282 cprogs.heap.program <> _t'2 def
R3090:3093 Csplit.AClight <> Cset constr
R3115:3120 compcert.cfrontend.Clight <> Ederef constr
R3229:3232 compcert.exportclight.Clightdefs <> tint def
R3139:3144 compcert.cfrontend.Clight <> Ebinop constr
R3217:3220 compcert.exportclight.Clightdefs <> tptr def
R3222:3225 compcert.exportclight.Clightdefs <> tint def
R3178:3185 compcert.cfrontend.Clight <> Etempvar constr
R3192:3195 compcert.exportclight.Clightdefs <> tint def
R3187:3190 cprogs.heap.program <> _pos def
R3152:3159 compcert.cfrontend.Clight <> Etempvar constr
R3165:3168 compcert.exportclight.Clightdefs <> tptr def
R3170:3173 compcert.exportclight.Clightdefs <> tint def
R3161:3162 cprogs.heap.program <> _a def
R3146:3149 compcert.cfrontend.Cop <> Oadd constr
R3095:3098 cprogs.heap.program <> _t'1 def
R2898:2908 Csplit.AClight <> Cifthenelse constr
R3029:3034 Csplit.AClight <> Cbreak constr
R3013:3017 Csplit.AClight <> Cskip constr
R2911:2916 compcert.cfrontend.Clight <> Ebinop constr
R2997:3000 compcert.exportclight.Clightdefs <> tint def
R2967:2976 compcert.cfrontend.Clight <> Econst_int constr
R2991:2994 compcert.exportclight.Clightdefs <> tint def
R2979:2986 compcert.lib.Integers Int repr def
R2923:2930 compcert.cfrontend.Clight <> Etempvar constr
R2937:2940 compcert.exportclight.Clightdefs <> tint def
R2932:2935 cprogs.heap.program <> _pos def
R2918:2920 compcert.cfrontend.Cop <> Ogt constr
R2460:2466 Csplit.AClight <> Cassert constr
R2477:2479 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R2494:2506 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R2861:2861 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 2480:2482 <> Hl0:20
binder 2484:2487 <> pos1:21
binder 2489:2489 <> a:22
binder 2491:2493 <> pos:23
R2507:2513 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2543:2546 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2574:2577 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2584:2587 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2603:2606 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2618:2621 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2650:2653 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2666:2669 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2685:2688 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2700:2703 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2734:2737 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2752:2755 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2767:2779 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R2514:2519 cprogs.heap.definitions <> up_inv def
R2540:2542 cprogs.heap.annotation <> Hl0:20 var
R2535:2538 cprogs.heap.annotation <> pos1:21 var
R2550:2553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2573:2573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2547:2549 cprogs.heap.annotation <> pos:23 var
R2554:2557 compcert.common.Values <> Vint constr
R2560:2571 cprogs.heap.definitions <> :::'IntRepr' not
R2568:2571 cprogs.heap.annotation <> pos1:21 var
R2579:2581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2578:2578 cprogs.heap.annotation <> a:22 var
R2588:2591 Coq.ZArith.BinInt Z le def
R2593:2596 cprogs.heap.annotation <> pos1:21 var
R2607:2610 Coq.ZArith.BinInt Z le def
R2614:2617 cprogs.heap.annotation <> pos1:21 var
R2622:2625 Coq.ZArith.BinInt Z le def
R2628:2632 Coq.ZArith.BinInt Z add def
R2654:2657 Coq.ZArith.BinInt Z le def
R2670:2673 Coq.ZArith.BinInt Z le def
R2689:2692 Coq.ZArith.BinInt Z le def
R2704:2707 Coq.ZArith.BinInt Z le def
R2718:2731 compcert.lib.Integers Int max_signed def
R2738:2741 Coq.ZArith.BinInt Z le def
R2756:2762 cprogs.heap.definitions <> all_int def
R2764:2766 cprogs.heap.annotation <> Hl0:20 var
R2780:2786 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R2796:2797 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R2811:2822 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R2787:2790 FloydSeq.canon <> temp constr
R2795:2795 cprogs.heap.annotation <> a:22 var
R2792:2793 cprogs.heap.program <> _a def
R2798:2801 FloydSeq.canon <> temp constr
R2808:2810 cprogs.heap.annotation <> pos:23 var
R2803:2806 cprogs.heap.program <> _pos def
R2823:2828 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R2859:2860 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R2829:2844 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2847:2847 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2851:2851 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R2848:2850 cprogs.heap.annotation <> Hl0:20 var
def 4314:4335 <> f_down_spec_annotation
R4342:4357 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R4396:4399 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 4358:4362 <> size0:24
binder 4364:4367 <> pos0:25
binder 4369:4370 <> a0:26
binder 4372:4378 <> Maxsize:27
binder 4380:4381 <> Hl:28
binder 4383:4384 <> a':29
binder 4386:4389 <> pos':30
binder 4391:4395 <> size':31
R4400:4401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4737:4741 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4896:4896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4402:4408 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4439:4442 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4471:4474 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4482:4485 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4514:4517 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4530:4533 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4549:4552 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4564:4567 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4608:4611 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4626:4629 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4640:4644 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4414:4417 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4438:4438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4409:4413 cprogs.heap.annotation <> size':31 var
R4418:4421 compcert.common.Values <> Vint constr
R4424:4436 cprogs.heap.definitions <> :::'IntRepr' not
R4432:4436 cprogs.heap.annotation <> size0:24 var
R4447:4450 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4470:4470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4443:4446 cprogs.heap.annotation <> pos':30 var
R4451:4454 compcert.common.Values <> Vint constr
R4457:4468 cprogs.heap.definitions <> :::'IntRepr' not
R4465:4468 cprogs.heap.annotation <> pos0:25 var
R4477:4479 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4475:4476 cprogs.heap.annotation <> a':29 var
R4480:4481 cprogs.heap.annotation <> a0:26 var
R4486:4489 Coq.ZArith.BinInt Z le def
R4507:4513 cprogs.heap.annotation <> Maxsize:27 var
R4492:4496 Coq.ZArith.BinInt Z add def
R4498:4502 cprogs.heap.annotation <> size0:24 var
R4518:4521 Coq.ZArith.BinInt Z le def
R4525:4529 cprogs.heap.annotation <> size0:24 var
R4534:4537 Coq.ZArith.BinInt Z le def
R4544:4548 cprogs.heap.annotation <> size0:24 var
R4539:4542 cprogs.heap.annotation <> pos0:25 var
R4553:4556 Coq.ZArith.BinInt Z le def
R4560:4563 cprogs.heap.annotation <> pos0:25 var
R4568:4571 Coq.ZArith.BinInt Z le def
R4592:4605 compcert.lib.Integers Int max_signed def
R4574:4578 Coq.ZArith.BinInt Z mul def
R4582:4588 cprogs.heap.annotation <> Maxsize:27 var
R4612:4615 Coq.ZArith.BinInt Z le def
R4619:4625 cprogs.heap.annotation <> Maxsize:27 var
R4630:4636 cprogs.heap.definitions <> all_int def
R4638:4639 cprogs.heap.annotation <> Hl:28 var
R4645:4651 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4662:4663 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4678:4679 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4696:4699 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4652:4655 FloydSeq.canon <> temp constr
R4660:4661 cprogs.heap.annotation <> a':29 var
R4657:4658 cprogs.heap.program <> _a def
R4664:4667 FloydSeq.canon <> temp constr
R4674:4677 cprogs.heap.annotation <> pos':30 var
R4669:4672 cprogs.heap.program <> _pos def
R4680:4683 FloydSeq.canon <> temp constr
R4691:4695 cprogs.heap.annotation <> size':31 var
R4685:4689 cprogs.heap.program <> _size def
R4700:4705 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4735:4736 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4706:4721 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4724:4724 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4727:4727 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4728:4734 cprogs.heap.annotation <> Maxsize:27 var
R4725:4726 cprogs.heap.annotation <> Hl:28 var
R4722:4723 cprogs.heap.annotation <> a0:26 var
R4743:4745 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R4759:4765 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R4887:4887 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 4746:4753 <> Hl_final:32
binder 4755:4758 <> pos1:33
R4766:4772 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4805:4808 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4824:4830 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4773:4776 cprogs.heap.definitions <> down def
R4797:4804 cprogs.heap.annotation <> Hl_final:32 var
R4792:4795 cprogs.heap.annotation <> pos1:33 var
R4787:4790 cprogs.heap.annotation <> pos0:25 var
R4781:4785 cprogs.heap.annotation <> size0:24 var
R4778:4779 cprogs.heap.annotation <> Hl:28 var
R4809:4812 Coq.ZArith.BinInt Z le def
R4819:4823 cprogs.heap.annotation <> size0:24 var
R4814:4817 cprogs.heap.annotation <> pos1:33 var
R4831:4843 FloydSeq.canon <> :::'LOCAL'_'()'_x not
R4844:4849 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4885:4886 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4850:4865 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4868:4868 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4877:4877 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R4878:4884 cprogs.heap.annotation <> Maxsize:27 var
R4869:4876 cprogs.heap.annotation <> Hl_final:32 var
R4866:4867 cprogs.heap.annotation <> a0:26 var
def 4911:4929 <> f_down_spec_complex
R4959:4980 cprogs.heap.annotation <> f_down_spec_annotation def
def 4996:5008 <> f_down_funsig
R5011:5016 VST.veric.SeparationLogic <> funsig def
R5023:5023 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5081:5082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5088:5088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5041:5044 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5024:5024 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5027:5029 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5039:5040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5025:5026 cprogs.heap.program <> _a def
R5030:5033 compcert.exportclight.Clightdefs <> tptr def
R5035:5038 compcert.exportclight.Clightdefs <> tint def
R5058:5061 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5045:5045 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5051:5052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5057:5057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5046:5050 cprogs.heap.program <> _size def
R5053:5056 compcert.exportclight.Clightdefs <> tint def
R5074:5077 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5062:5062 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5067:5068 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5073:5073 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5063:5066 cprogs.heap.program <> _pos def
R5069:5072 compcert.exportclight.Clightdefs <> tint def
R5078:5080 Coq.Init.Datatypes <> nil constr
R5083:5087 compcert.exportclight.Clightdefs <> tvoid def
def 5103:5111 <> down_spec
R5138:5142 cprogs.heap.program <> _down def
R5144:5156 cprogs.heap.annotation <> f_down_funsig def
R5158:5176 cprogs.heap.annotation <> f_down_spec_complex def
def 5192:5202 <> f_down_hint
R5211:5224 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R5225:5246 cprogs.heap.annotation <> f_down_spec_annotation def
binder 5205:5208 <> para:34
R5260:5263 cprogs.heap.annotation <> para:34 var
R5274:5274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5280:5281 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5286:5287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5290:5291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5299:5300 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5303:5304 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5307:5308 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5313:5314 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5320:5320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5328:5332 Csplit.AClight <> Cloop constr
R9132:9136 Csplit.AClight <> Cskip constr
R5339:5347 Csplit.AClight <> Csequence constr
R5861:5869 Csplit.AClight <> Csequence constr
R6117:6125 Csplit.AClight <> Csequence constr
R6179:6187 Csplit.AClight <> Csequence constr
R6950:6958 Csplit.AClight <> Csequence constr
R8382:8390 Csplit.AClight <> Csequence constr
R8577:8585 Csplit.AClight <> Csequence constr
R9091:9094 Csplit.AClight <> Cset constr
R9102:9109 compcert.cfrontend.Clight <> Etempvar constr
R9114:9117 compcert.exportclight.Clightdefs <> tint def
R9111:9112 cprogs.heap.program <> _t def
R9096:9099 cprogs.heap.program <> _pos def
R8606:8610 Csplit.AClight <> Ccall constr
R8849:8849 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8943:8968 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8850:8855 compcert.cfrontend.Clight <> Ebinop constr
R8933:8936 compcert.exportclight.Clightdefs <> tptr def
R8938:8941 compcert.exportclight.Clightdefs <> tint def
R8912:8919 compcert.cfrontend.Clight <> Etempvar constr
R8926:8929 compcert.exportclight.Clightdefs <> tint def
R8921:8924 cprogs.heap.program <> _pos def
R8863:8870 compcert.cfrontend.Clight <> Etempvar constr
R8876:8879 compcert.exportclight.Clightdefs <> tptr def
R8881:8884 compcert.exportclight.Clightdefs <> tint def
R8872:8873 cprogs.heap.program <> _a def
R8857:8860 compcert.cfrontend.Cop <> Oadd constr
R8969:8969 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9061:9065 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8970:8975 compcert.cfrontend.Clight <> Ebinop constr
R9051:9054 compcert.exportclight.Clightdefs <> tptr def
R9056:9059 compcert.exportclight.Clightdefs <> tint def
R9032:9039 compcert.cfrontend.Clight <> Etempvar constr
R9044:9047 compcert.exportclight.Clightdefs <> tint def
R9041:9042 cprogs.heap.program <> _t def
R8983:8990 compcert.cfrontend.Clight <> Etempvar constr
R8996:8999 compcert.exportclight.Clightdefs <> tptr def
R9001:9004 compcert.exportclight.Clightdefs <> tint def
R8992:8993 cprogs.heap.program <> _a def
R8977:8980 compcert.cfrontend.Cop <> Oadd constr
R9066:9068 Coq.Init.Datatypes <> nil constr
R8638:8641 compcert.cfrontend.Clight <> Evar constr
R8650:8658 compcert.cfrontend.Ctypes <> Tfunction constr
R8815:8824 compcert.common.AST <> cc_default def
R8775:8779 compcert.exportclight.Clightdefs <> tvoid def
R8695:8699 compcert.cfrontend.Ctypes <> Tcons constr
R8750:8754 compcert.cfrontend.Ctypes <> Tcons constr
R8768:8771 compcert.cfrontend.Ctypes <> Tnil constr
R8757:8760 compcert.exportclight.Clightdefs <> tptr def
R8762:8765 compcert.exportclight.Clightdefs <> tint def
R8702:8705 compcert.exportclight.Clightdefs <> tptr def
R8707:8710 compcert.exportclight.Clightdefs <> tint def
R8643:8647 cprogs.heap.program <> _swap def
R8612:8615 Coq.Init.Datatypes <> None constr
R8409:8419 Csplit.AClight <> Cifthenelse constr
R8553:8557 Csplit.AClight <> Cskip constr
R8528:8533 Csplit.AClight <> Cbreak constr
R8422:8427 compcert.cfrontend.Clight <> Ebinop constr
R8504:8507 compcert.exportclight.Clightdefs <> tint def
R8484:8491 compcert.cfrontend.Clight <> Etempvar constr
R8498:8501 compcert.exportclight.Clightdefs <> tint def
R8493:8496 cprogs.heap.program <> _pos def
R8434:8441 compcert.cfrontend.Clight <> Etempvar constr
R8446:8449 compcert.exportclight.Clightdefs <> tint def
R8443:8444 cprogs.heap.program <> _t def
R8429:8431 compcert.cfrontend.Cop <> Oeq constr
R6975:6985 Csplit.AClight <> Cifthenelse constr
R8360:8364 Csplit.AClight <> Cskip constr
R7317:7325 Csplit.AClight <> Csequence constr
R7730:7738 Csplit.AClight <> Csequence constr
R7950:7960 Csplit.AClight <> Cifthenelse constr
R8335:8339 Csplit.AClight <> Cskip constr
R8080:8083 Csplit.AClight <> Cset constr
R8113:8118 compcert.cfrontend.Clight <> Ebinop constr
R8306:8309 compcert.exportclight.Clightdefs <> tint def
R8276:8285 compcert.cfrontend.Clight <> Econst_int constr
R8300:8303 compcert.exportclight.Clightdefs <> tint def
R8288:8295 compcert.lib.Integers Int repr def
R8151:8156 compcert.cfrontend.Clight <> Ebinop constr
R8243:8246 compcert.exportclight.Clightdefs <> tint def
R8213:8222 compcert.cfrontend.Clight <> Econst_int constr
R8237:8240 compcert.exportclight.Clightdefs <> tint def
R8225:8232 compcert.lib.Integers Int repr def
R8164:8171 compcert.cfrontend.Clight <> Etempvar constr
R8178:8181 compcert.exportclight.Clightdefs <> tint def
R8173:8176 cprogs.heap.program <> _pos def
R8158:8161 compcert.cfrontend.Cop <> Oshl constr
R8120:8122 compcert.cfrontend.Cop <> Oor constr
R8085:8086 cprogs.heap.program <> _t def
R7963:7968 compcert.cfrontend.Clight <> Ebinop constr
R8051:8054 compcert.exportclight.Clightdefs <> tint def
R8031:8038 compcert.cfrontend.Clight <> Etempvar constr
R8045:8048 compcert.exportclight.Clightdefs <> tint def
R8040:8043 cprogs.heap.program <> _t'2 def
R7975:7982 compcert.cfrontend.Clight <> Etempvar constr
R7989:7992 compcert.exportclight.Clightdefs <> tint def
R7984:7987 cprogs.heap.program <> _t'1 def
R7970:7972 compcert.cfrontend.Cop <> Ogt constr
R7761:7764 Csplit.AClight <> Cset constr
R7794:7799 compcert.cfrontend.Clight <> Ederef constr
R7922:7925 compcert.exportclight.Clightdefs <> tint def
R7826:7831 compcert.cfrontend.Clight <> Ebinop constr
R7910:7913 compcert.exportclight.Clightdefs <> tptr def
R7915:7918 compcert.exportclight.Clightdefs <> tint def
R7891:7898 compcert.cfrontend.Clight <> Etempvar constr
R7903:7906 compcert.exportclight.Clightdefs <> tint def
R7900:7901 cprogs.heap.program <> _t def
R7839:7846 compcert.cfrontend.Clight <> Etempvar constr
R7852:7855 compcert.exportclight.Clightdefs <> tptr def
R7857:7860 compcert.exportclight.Clightdefs <> tint def
R7848:7849 cprogs.heap.program <> _a def
R7833:7836 compcert.cfrontend.Cop <> Oadd constr
R7766:7769 cprogs.heap.program <> _t'2 def
R7346:7349 Csplit.AClight <> Cset constr
R7377:7382 compcert.cfrontend.Clight <> Ederef constr
R7704:7707 compcert.exportclight.Clightdefs <> tint def
R7407:7412 compcert.cfrontend.Clight <> Ebinop constr
R7670:7673 compcert.exportclight.Clightdefs <> tptr def
R7675:7678 compcert.exportclight.Clightdefs <> tint def
R7470:7475 compcert.cfrontend.Clight <> Ebinop constr
R7663:7666 compcert.exportclight.Clightdefs <> tint def
R7633:7642 compcert.cfrontend.Clight <> Econst_int constr
R7657:7660 compcert.exportclight.Clightdefs <> tint def
R7645:7652 compcert.lib.Integers Int repr def
R7508:7513 compcert.cfrontend.Clight <> Ebinop constr
R7600:7603 compcert.exportclight.Clightdefs <> tint def
R7570:7579 compcert.cfrontend.Clight <> Econst_int constr
R7594:7597 compcert.exportclight.Clightdefs <> tint def
R7582:7589 compcert.lib.Integers Int repr def
R7521:7528 compcert.cfrontend.Clight <> Etempvar constr
R7535:7538 compcert.exportclight.Clightdefs <> tint def
R7530:7533 cprogs.heap.program <> _pos def
R7515:7518 compcert.cfrontend.Cop <> Oshl constr
R7477:7479 compcert.cfrontend.Cop <> Oor constr
R7420:7427 compcert.cfrontend.Clight <> Etempvar constr
R7433:7436 compcert.exportclight.Clightdefs <> tptr def
R7438:7441 compcert.exportclight.Clightdefs <> tint def
R7429:7430 cprogs.heap.program <> _a def
R7414:7417 compcert.cfrontend.Cop <> Oadd constr
R7351:7354 cprogs.heap.program <> _t'1 def
R6988:6993 compcert.cfrontend.Clight <> Ebinop constr
R7294:7297 compcert.exportclight.Clightdefs <> tint def
R7273:7280 compcert.cfrontend.Clight <> Etempvar constr
R7288:7291 compcert.exportclight.Clightdefs <> tint def
R7282:7286 cprogs.heap.program <> _size def
R7029:7034 compcert.cfrontend.Clight <> Ebinop constr
R7237:7240 compcert.exportclight.Clightdefs <> tint def
R7207:7216 compcert.cfrontend.Clight <> Econst_int constr
R7231:7234 compcert.exportclight.Clightdefs <> tint def
R7219:7226 compcert.lib.Integers Int repr def
R7072:7077 compcert.cfrontend.Clight <> Ebinop constr
R7169:7172 compcert.exportclight.Clightdefs <> tint def
R7139:7148 compcert.cfrontend.Clight <> Econst_int constr
R7163:7166 compcert.exportclight.Clightdefs <> tint def
R7151:7158 compcert.lib.Integers Int repr def
R7085:7092 compcert.cfrontend.Clight <> Etempvar constr
R7099:7102 compcert.exportclight.Clightdefs <> tint def
R7094:7097 cprogs.heap.program <> _pos def
R7079:7082 compcert.cfrontend.Cop <> Oshl constr
R7036:7038 compcert.cfrontend.Cop <> Oor constr
R6995:6997 compcert.cfrontend.Cop <> Ole constr
R6202:6210 Csplit.AClight <> Csequence constr
R6466:6474 Csplit.AClight <> Csequence constr
R6666:6676 Csplit.AClight <> Cifthenelse constr
R6928:6932 Csplit.AClight <> Cskip constr
R6788:6791 Csplit.AClight <> Cset constr
R6817:6822 compcert.cfrontend.Clight <> Ebinop constr
R6903:6906 compcert.exportclight.Clightdefs <> tint def
R6873:6882 compcert.cfrontend.Clight <> Econst_int constr
R6897:6900 compcert.exportclight.Clightdefs <> tint def
R6885:6892 compcert.lib.Integers Int repr def
R6830:6837 compcert.cfrontend.Clight <> Etempvar constr
R6844:6847 compcert.exportclight.Clightdefs <> tint def
R6839:6842 cprogs.heap.program <> _pos def
R6824:6827 compcert.cfrontend.Cop <> Oshl constr
R6793:6794 cprogs.heap.program <> _t def
R6679:6684 compcert.cfrontend.Clight <> Ebinop constr
R6763:6766 compcert.exportclight.Clightdefs <> tint def
R6743:6750 compcert.cfrontend.Clight <> Etempvar constr
R6757:6760 compcert.exportclight.Clightdefs <> tint def
R6752:6755 cprogs.heap.program <> _t'4 def
R6691:6698 compcert.cfrontend.Clight <> Etempvar constr
R6705:6708 compcert.exportclight.Clightdefs <> tint def
R6700:6703 cprogs.heap.program <> _t'3 def
R6686:6688 compcert.cfrontend.Cop <> Ogt constr
R6493:6496 Csplit.AClight <> Cset constr
R6522:6527 compcert.cfrontend.Clight <> Ederef constr
R6642:6645 compcert.exportclight.Clightdefs <> tint def
R6550:6555 compcert.cfrontend.Clight <> Ebinop constr
R6630:6633 compcert.exportclight.Clightdefs <> tptr def
R6635:6638 compcert.exportclight.Clightdefs <> tint def
R6589:6596 compcert.cfrontend.Clight <> Etempvar constr
R6601:6604 compcert.exportclight.Clightdefs <> tint def
R6598:6599 cprogs.heap.program <> _t def
R6563:6570 compcert.cfrontend.Clight <> Etempvar constr
R6576:6579 compcert.exportclight.Clightdefs <> tptr def
R6581:6584 compcert.exportclight.Clightdefs <> tint def
R6572:6573 cprogs.heap.program <> _a def
R6557:6560 compcert.cfrontend.Cop <> Oadd constr
R6498:6501 cprogs.heap.program <> _t'4 def
R6227:6230 Csplit.AClight <> Cset constr
R6254:6259 compcert.cfrontend.Clight <> Ederef constr
R6444:6447 compcert.exportclight.Clightdefs <> tint def
R6280:6285 compcert.cfrontend.Clight <> Ebinop constr
R6432:6435 compcert.exportclight.Clightdefs <> tptr def
R6437:6440 compcert.exportclight.Clightdefs <> tint def
R6339:6344 compcert.cfrontend.Clight <> Ebinop constr
R6425:6428 compcert.exportclight.Clightdefs <> tint def
R6395:6404 compcert.cfrontend.Clight <> Econst_int constr
R6419:6422 compcert.exportclight.Clightdefs <> tint def
R6407:6414 compcert.lib.Integers Int repr def
R6352:6359 compcert.cfrontend.Clight <> Etempvar constr
R6366:6369 compcert.exportclight.Clightdefs <> tint def
R6361:6364 cprogs.heap.program <> _pos def
R6346:6349 compcert.cfrontend.Cop <> Oshl constr
R6293:6300 compcert.cfrontend.Clight <> Etempvar constr
R6306:6309 compcert.exportclight.Clightdefs <> tptr def
R6311:6314 compcert.exportclight.Clightdefs <> tint def
R6302:6303 cprogs.heap.program <> _a def
R6287:6290 compcert.cfrontend.Cop <> Oadd constr
R6232:6235 cprogs.heap.program <> _t'3 def
R6138:6141 Csplit.AClight <> Cset constr
R6147:6154 compcert.cfrontend.Clight <> Etempvar constr
R6161:6164 compcert.exportclight.Clightdefs <> tint def
R6156:6159 cprogs.heap.program <> _pos def
R6143:6144 cprogs.heap.program <> _t def
R5880:5890 Csplit.AClight <> Cifthenelse constr
R6100:6105 Csplit.AClight <> Cbreak constr
R6084:6088 Csplit.AClight <> Cskip constr
R5893:5898 compcert.cfrontend.Clight <> Ebinop constr
R6068:6071 compcert.exportclight.Clightdefs <> tint def
R6047:6054 compcert.cfrontend.Clight <> Etempvar constr
R6062:6065 compcert.exportclight.Clightdefs <> tint def
R6056:6060 cprogs.heap.program <> _size def
R5928:5933 compcert.cfrontend.Clight <> Ebinop constr
R6017:6020 compcert.exportclight.Clightdefs <> tint def
R5987:5996 compcert.cfrontend.Clight <> Econst_int constr
R6011:6014 compcert.exportclight.Clightdefs <> tint def
R5999:6006 compcert.lib.Integers Int repr def
R5941:5948 compcert.cfrontend.Clight <> Etempvar constr
R5955:5958 compcert.exportclight.Clightdefs <> tint def
R5950:5953 cprogs.heap.program <> _pos def
R5935:5938 compcert.cfrontend.Cop <> Oshl constr
R5900:5902 compcert.cfrontend.Cop <> Ole constr
R5356:5362 Csplit.AClight <> Cassert constr
R5373:5375 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R5395:5407 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R5843:5843 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 5376:5378 <> Hl0:36
binder 5380:5383 <> pos1:37
binder 5385:5385 <> a:38
binder 5387:5389 <> pos:39
binder 5391:5394 <> size:40
R5408:5414 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5446:5449 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5479:5482 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5510:5513 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5529:5532 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5539:5542 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5558:5561 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5573:5576 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5605:5608 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5621:5624 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5640:5643 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5655:5658 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5699:5702 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5717:5720 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5732:5744 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R5415:5422 cprogs.heap.definitions <> down_inv def
R5443:5445 cprogs.heap.annotation <> Hl0:36 var
R5438:5441 cprogs.heap.annotation <> pos1:37 var
R5454:5457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5478:5478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5450:5453 cprogs.heap.annotation <> size:40 var
R5458:5461 compcert.common.Values <> Vint constr
R5464:5476 cprogs.heap.definitions <> :::'IntRepr' not
R5486:5489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5509:5509 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5483:5485 cprogs.heap.annotation <> pos:39 var
R5490:5493 compcert.common.Values <> Vint constr
R5496:5507 cprogs.heap.definitions <> :::'IntRepr' not
R5504:5507 cprogs.heap.annotation <> pos1:37 var
R5514:5517 Coq.ZArith.BinInt Z le def
R5519:5522 cprogs.heap.annotation <> pos1:37 var
R5534:5536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5533:5533 cprogs.heap.annotation <> a:38 var
R5543:5546 Coq.ZArith.BinInt Z le def
R5548:5551 cprogs.heap.annotation <> pos1:37 var
R5562:5565 Coq.ZArith.BinInt Z le def
R5569:5572 cprogs.heap.annotation <> pos1:37 var
R5577:5580 Coq.ZArith.BinInt Z le def
R5583:5587 Coq.ZArith.BinInt Z add def
R5609:5612 Coq.ZArith.BinInt Z le def
R5625:5628 Coq.ZArith.BinInt Z le def
R5644:5647 Coq.ZArith.BinInt Z le def
R5659:5662 Coq.ZArith.BinInt Z le def
R5683:5696 compcert.lib.Integers Int max_signed def
R5665:5669 Coq.ZArith.BinInt Z mul def
R5703:5706 Coq.ZArith.BinInt Z le def
R5721:5727 cprogs.heap.definitions <> all_int def
R5729:5731 cprogs.heap.annotation <> Hl0:36 var
R5745:5751 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R5761:5762 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R5776:5777 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R5793:5804 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R5752:5755 FloydSeq.canon <> temp constr
R5760:5760 cprogs.heap.annotation <> a:38 var
R5757:5758 cprogs.heap.program <> _a def
R5763:5766 FloydSeq.canon <> temp constr
R5773:5775 cprogs.heap.annotation <> pos:39 var
R5768:5771 cprogs.heap.program <> _pos def
R5778:5781 FloydSeq.canon <> temp constr
R5789:5792 cprogs.heap.annotation <> size:40 var
R5783:5787 cprogs.heap.program <> _size def
R5805:5810 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R5841:5842 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R5811:5826 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R5829:5829 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R5833:5833 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R5830:5832 cprogs.heap.annotation <> Hl0:36 var
def 9158:9179 <> f_push_spec_annotation
R9186:9201 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R9247:9250 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 9202:9205 <> val0:41
binder 9207:9212 <> size_p:42
binder 9214:9218 <> size0:43
binder 9220:9221 <> a0:44
binder 9223:9229 <> Maxsize:45
binder 9231:9232 <> Hl:46
binder 9234:9235 <> a':47
binder 9237:9241 <> size':48
binder 9243:9246 <> val':49
R9251:9252 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9626:9630 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9792:9792 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9253:9259 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9274:9277 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9306:9309 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9317:9320 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9359:9362 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9375:9378 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9409:9412 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9427:9430 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9458:9461 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9489:9492 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9503:9507 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9265:9267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9260:9264 cprogs.heap.annotation <> size':48 var
R9268:9273 cprogs.heap.annotation <> size_p:42 var
R9282:9285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9305:9305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9278:9281 cprogs.heap.annotation <> val':49 var
R9286:9289 compcert.common.Values <> Vint constr
R9292:9303 cprogs.heap.definitions <> :::'IntRepr' not
R9300:9303 cprogs.heap.annotation <> val0:41 var
R9312:9314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9310:9311 cprogs.heap.annotation <> a0:44 var
R9315:9316 cprogs.heap.annotation <> a':47 var
R9321:9324 Coq.ZArith.BinInt Z le def
R9352:9358 cprogs.heap.annotation <> Maxsize:45 var
R9327:9331 Coq.ZArith.BinInt Z add def
R9334:9338 Coq.ZArith.BinInt Z add def
R9340:9344 cprogs.heap.annotation <> size0:43 var
R9363:9366 Coq.ZArith.BinInt Z le def
R9370:9374 cprogs.heap.annotation <> size0:43 var
R9379:9382 Coq.ZArith.BinInt Z le def
R9393:9406 compcert.lib.Integers Int max_signed def
R9384:9390 cprogs.heap.annotation <> Maxsize:45 var
R9413:9416 Coq.ZArith.BinInt Z le def
R9420:9426 cprogs.heap.annotation <> Maxsize:45 var
R9431:9434 Coq.ZArith.BinInt Z le def
R9442:9455 compcert.lib.Integers Int max_signed def
R9436:9439 cprogs.heap.annotation <> val0:41 var
R9462:9465 Coq.ZArith.BinInt Z le def
R9485:9488 cprogs.heap.annotation <> val0:41 var
R9468:9481 compcert.lib.Integers Int min_signed def
R9493:9499 cprogs.heap.definitions <> all_int def
R9501:9502 cprogs.heap.annotation <> Hl:46 var
R9508:9514 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9525:9526 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9543:9544 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9559:9562 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9515:9518 FloydSeq.canon <> temp constr
R9523:9524 cprogs.heap.annotation <> a':47 var
R9520:9521 cprogs.heap.program <> _a def
R9527:9530 FloydSeq.canon <> temp constr
R9538:9542 cprogs.heap.annotation <> size':48 var
R9532:9536 cprogs.heap.program <> _size def
R9545:9548 FloydSeq.canon <> temp constr
R9555:9558 cprogs.heap.annotation <> val':49 var
R9550:9553 cprogs.heap.program <> _val def
R9563:9568 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9598:9601 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9624:9625 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9569:9584 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9587:9587 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9590:9590 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9591:9597 cprogs.heap.annotation <> Maxsize:45 var
R9588:9589 cprogs.heap.annotation <> Hl:46 var
R9585:9586 cprogs.heap.annotation <> a0:44 var
R9602:9611 cprogs.heap.definitions <> :::'store_int'_x_x not
R9618:9618 cprogs.heap.definitions <> :::'store_int'_x_x not
R9619:9623 cprogs.heap.annotation <> size0:43 var
R9612:9617 cprogs.heap.annotation <> size_p:42 var
R9632:9634 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R9643:9649 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R9783:9783 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 9635:9642 <> Hl_final:50
R9650:9656 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9684:9690 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9657:9660 cprogs.heap.definitions <> push def
R9676:9683 cprogs.heap.annotation <> Hl_final:50 var
R9671:9674 cprogs.heap.annotation <> val0:41 var
R9665:9669 cprogs.heap.annotation <> size0:43 var
R9662:9663 cprogs.heap.annotation <> Hl:46 var
R9691:9703 FloydSeq.canon <> :::'LOCAL'_'()'_x not
R9704:9709 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9745:9748 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9781:9782 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9710:9725 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9728:9728 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9737:9737 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R9738:9744 cprogs.heap.annotation <> Maxsize:45 var
R9729:9736 cprogs.heap.annotation <> Hl_final:50 var
R9726:9727 cprogs.heap.annotation <> a0:44 var
R9749:9758 cprogs.heap.definitions <> :::'store_int'_x_x not
R9765:9766 cprogs.heap.definitions <> :::'store_int'_x_x not
R9780:9780 cprogs.heap.definitions <> :::'store_int'_x_x not
R9767:9771 Coq.ZArith.BinInt Z add def
R9773:9777 cprogs.heap.annotation <> size0:43 var
R9759:9764 cprogs.heap.annotation <> size_p:42 var
def 9807:9825 <> f_push_spec_complex
R9855:9876 cprogs.heap.annotation <> f_push_spec_annotation def
def 9892:9904 <> f_push_funsig
R9907:9912 VST.veric.SeparationLogic <> funsig def
R9919:9919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9984:9985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9991:9991 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9937:9940 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9920:9920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9923:9925 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9935:9936 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9921:9922 cprogs.heap.program <> _a def
R9926:9929 compcert.exportclight.Clightdefs <> tptr def
R9931:9934 compcert.exportclight.Clightdefs <> tint def
R9961:9964 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9941:9941 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9947:9949 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9959:9960 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9942:9946 cprogs.heap.program <> _size def
R9950:9953 compcert.exportclight.Clightdefs <> tptr def
R9955:9958 compcert.exportclight.Clightdefs <> tint def
R9977:9980 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9965:9965 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9970:9971 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9976:9976 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9966:9969 cprogs.heap.program <> _val def
R9972:9975 compcert.exportclight.Clightdefs <> tint def
R9981:9983 Coq.Init.Datatypes <> nil constr
R9986:9990 compcert.exportclight.Clightdefs <> tvoid def
def 10006:10014 <> push_spec
R10041:10045 cprogs.heap.program <> _push def
R10047:10059 cprogs.heap.annotation <> f_push_funsig def
R10061:10079 cprogs.heap.annotation <> f_push_spec_complex def
def 10095:10105 <> f_push_hint
R10114:10127 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R10128:10149 cprogs.heap.annotation <> f_push_spec_annotation def
binder 10108:10111 <> para:51
R10163:10166 cprogs.heap.annotation <> para:51 var
R10177:10177 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10182:10183 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10190:10191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10197:10198 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10201:10202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10210:10211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10214:10215 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10218:10219 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10225:10226 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10231:10231 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10239:10247 Csplit.AClight <> Csequence constr
R10479:10487 Csplit.AClight <> Csequence constr
R10739:10747 Csplit.AClight <> Csequence constr
R10821:10825 Csplit.AClight <> Ccall constr
R10953:10953 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10977:10981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10954:10961 compcert.cfrontend.Clight <> Etempvar constr
R10967:10970 compcert.exportclight.Clightdefs <> tptr def
R10972:10975 compcert.exportclight.Clightdefs <> tint def
R10963:10964 cprogs.heap.program <> _a def
R10982:10982 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11001:11005 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10983:10990 compcert.cfrontend.Clight <> Etempvar constr
R10997:11000 compcert.exportclight.Clightdefs <> tint def
R10992:10995 cprogs.heap.program <> _t'1 def
R11006:11008 Coq.Init.Datatypes <> nil constr
R10843:10846 compcert.cfrontend.Clight <> Evar constr
R10853:10861 compcert.cfrontend.Ctypes <> Tfunction constr
R10929:10938 compcert.common.AST <> cc_default def
R10901:10905 compcert.exportclight.Clightdefs <> tvoid def
R10864:10868 compcert.cfrontend.Ctypes <> Tcons constr
R10883:10887 compcert.cfrontend.Ctypes <> Tcons constr
R10894:10897 compcert.cfrontend.Ctypes <> Tnil constr
R10889:10892 compcert.exportclight.Clightdefs <> tint def
R10871:10874 compcert.exportclight.Clightdefs <> tptr def
R10876:10879 compcert.exportclight.Clightdefs <> tint def
R10848:10850 cprogs.heap.program <> _up def
R10827:10830 Coq.Init.Datatypes <> None constr
R10758:10761 Csplit.AClight <> Cset constr
R10769:10774 compcert.cfrontend.Clight <> Ederef constr
R10805:10808 compcert.exportclight.Clightdefs <> tint def
R10777:10784 compcert.cfrontend.Clight <> Etempvar constr
R10793:10796 compcert.exportclight.Clightdefs <> tptr def
R10798:10801 compcert.exportclight.Clightdefs <> tint def
R10786:10790 cprogs.heap.program <> _size def
R10763:10766 cprogs.heap.program <> _t'1 def
R10496:10504 Csplit.AClight <> Csequence constr
R10578:10584 Csplit.AClight <> Cassign constr
R10710:10717 compcert.cfrontend.Clight <> Etempvar constr
R10724:10727 compcert.exportclight.Clightdefs <> tint def
R10719:10722 cprogs.heap.program <> _val def
R10597:10602 compcert.cfrontend.Clight <> Ederef constr
R10703:10706 compcert.exportclight.Clightdefs <> tint def
R10617:10622 compcert.cfrontend.Clight <> Ebinop constr
R10691:10694 compcert.exportclight.Clightdefs <> tptr def
R10696:10699 compcert.exportclight.Clightdefs <> tint def
R10656:10663 compcert.cfrontend.Clight <> Etempvar constr
R10670:10673 compcert.exportclight.Clightdefs <> tint def
R10665:10668 cprogs.heap.program <> _t'2 def
R10630:10637 compcert.cfrontend.Clight <> Etempvar constr
R10643:10646 compcert.exportclight.Clightdefs <> tptr def
R10648:10651 compcert.exportclight.Clightdefs <> tint def
R10639:10640 cprogs.heap.program <> _a def
R10624:10627 compcert.cfrontend.Cop <> Oadd constr
R10515:10518 Csplit.AClight <> Cset constr
R10526:10531 compcert.cfrontend.Clight <> Ederef constr
R10562:10565 compcert.exportclight.Clightdefs <> tint def
R10534:10541 compcert.cfrontend.Clight <> Etempvar constr
R10550:10553 compcert.exportclight.Clightdefs <> tptr def
R10555:10558 compcert.exportclight.Clightdefs <> tint def
R10543:10547 cprogs.heap.program <> _size def
R10520:10523 cprogs.heap.program <> _t'2 def
R10254:10262 Csplit.AClight <> Csequence constr
R10332:10338 Csplit.AClight <> Cassign constr
R10392:10397 compcert.cfrontend.Clight <> Ebinop constr
R10466:10469 compcert.exportclight.Clightdefs <> tint def
R10426:10435 compcert.cfrontend.Clight <> Econst_int constr
R10450:10453 compcert.exportclight.Clightdefs <> tint def
R10438:10445 compcert.lib.Integers Int repr def
R10405:10412 compcert.cfrontend.Clight <> Etempvar constr
R10419:10422 compcert.exportclight.Clightdefs <> tint def
R10414:10417 cprogs.heap.program <> _t'3 def
R10399:10402 compcert.cfrontend.Cop <> Oadd constr
R10341:10346 compcert.cfrontend.Clight <> Ederef constr
R10377:10380 compcert.exportclight.Clightdefs <> tint def
R10349:10356 compcert.cfrontend.Clight <> Etempvar constr
R10365:10368 compcert.exportclight.Clightdefs <> tptr def
R10370:10373 compcert.exportclight.Clightdefs <> tint def
R10358:10362 cprogs.heap.program <> _size def
R10271:10274 Csplit.AClight <> Cset constr
R10282:10287 compcert.cfrontend.Clight <> Ederef constr
R10318:10321 compcert.exportclight.Clightdefs <> tint def
R10290:10297 compcert.cfrontend.Clight <> Etempvar constr
R10306:10309 compcert.exportclight.Clightdefs <> tptr def
R10311:10314 compcert.exportclight.Clightdefs <> tint def
R10299:10303 cprogs.heap.program <> _size def
R10276:10279 cprogs.heap.program <> _t'3 def
def 11034:11054 <> f_pop_spec_annotation
R11061:11076 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R11112:11115 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 11077:11082 <> size_p:53
binder 11084:11088 <> size0:54
binder 11090:11091 <> a0:55
binder 11093:11099 <> Maxsize:56
binder 11101:11102 <> Hl:57
binder 11104:11105 <> a':58
binder 11107:11111 <> size':59
R11116:11117 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11381:11385 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11655:11655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11118:11124 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11139:11142 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11150:11153 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11182:11185 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11198:11201 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11242:11245 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11260:11263 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11274:11278 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11130:11132 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11125:11129 cprogs.heap.annotation <> size':59 var
R11133:11138 cprogs.heap.annotation <> size_p:53 var
R11145:11147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11143:11144 cprogs.heap.annotation <> a':58 var
R11148:11149 cprogs.heap.annotation <> a0:55 var
R11154:11157 Coq.ZArith.BinInt Z le def
R11175:11181 cprogs.heap.annotation <> Maxsize:56 var
R11160:11164 Coq.ZArith.BinInt Z add def
R11166:11170 cprogs.heap.annotation <> size0:54 var
R11186:11189 Coq.ZArith.BinInt Z le def
R11193:11197 cprogs.heap.annotation <> size0:54 var
R11202:11205 Coq.ZArith.BinInt Z le def
R11226:11239 compcert.lib.Integers Int max_signed def
R11208:11212 Coq.ZArith.BinInt Z mul def
R11216:11222 cprogs.heap.annotation <> Maxsize:56 var
R11246:11249 Coq.ZArith.BinInt Z le def
R11253:11259 cprogs.heap.annotation <> Maxsize:56 var
R11264:11270 cprogs.heap.definitions <> all_int def
R11272:11273 cprogs.heap.annotation <> Hl:57 var
R11279:11285 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11296:11297 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11314:11317 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11286:11289 FloydSeq.canon <> temp constr
R11294:11295 cprogs.heap.annotation <> a':58 var
R11291:11292 cprogs.heap.program <> _a def
R11298:11301 FloydSeq.canon <> temp constr
R11309:11313 cprogs.heap.annotation <> size':59 var
R11303:11307 cprogs.heap.program <> _size def
R11318:11323 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11353:11356 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11379:11380 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11324:11339 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11342:11342 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11345:11345 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11346:11352 cprogs.heap.annotation <> Maxsize:56 var
R11343:11344 cprogs.heap.annotation <> Hl:57 var
R11340:11341 cprogs.heap.annotation <> a0:55 var
R11357:11366 cprogs.heap.definitions <> :::'store_int'_x_x not
R11373:11373 cprogs.heap.definitions <> :::'store_int'_x_x not
R11374:11378 cprogs.heap.annotation <> size0:54 var
R11367:11372 cprogs.heap.annotation <> size_p:53 var
R11387:11389 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R11413:11419 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R11646:11646 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 11390:11397 <> Hl_final:60
binder 11399:11403 <> size1:61
binder 11405:11412 <> __return:62
R11420:11426 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11448:11451 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11481:11484 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11534:11540 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11427:11429 cprogs.heap.definitions <> pop def
R11440:11447 cprogs.heap.annotation <> Hl_final:60 var
R11434:11438 cprogs.heap.annotation <> size0:54 var
R11431:11432 cprogs.heap.annotation <> Hl:57 var
R11457:11460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11480:11480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11452:11456 cprogs.heap.annotation <> size1:61 var
R11461:11470 cprogs.heap.definitions <> pop_length def
R11475:11479 cprogs.heap.annotation <> size0:54 var
R11472:11473 cprogs.heap.annotation <> Hl:57 var
R11493:11496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11533:11533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11485:11492 cprogs.heap.annotation <> __return:62 var
R11497:11500 compcert.common.Values <> Vint constr
R11503:11531 cprogs.heap.definitions <> :::'IntRepr' not
R11512:11521 cprogs.heap.definitions <> pop_result def
R11526:11530 cprogs.heap.annotation <> size0:54 var
R11523:11524 cprogs.heap.annotation <> Hl:57 var
R11541:11547 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11571:11576 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11548:11551 FloydSeq.canon <> temp constr
R11563:11570 cprogs.heap.annotation <> __return:62 var
R11553:11561 cprogs.heap.annotation <> ___return def
R11577:11582 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11618:11621 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11644:11645 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11583:11598 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11601:11601 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11610:11610 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R11611:11617 cprogs.heap.annotation <> Maxsize:56 var
R11602:11609 cprogs.heap.annotation <> Hl_final:60 var
R11599:11600 cprogs.heap.annotation <> a0:55 var
R11622:11631 cprogs.heap.definitions <> :::'store_int'_x_x not
R11638:11638 cprogs.heap.definitions <> :::'store_int'_x_x not
R11639:11643 cprogs.heap.annotation <> size1:61 var
R11632:11637 cprogs.heap.annotation <> size_p:53 var
def 11670:11687 <> f_pop_spec_complex
R11717:11737 cprogs.heap.annotation <> f_pop_spec_annotation def
def 11753:11764 <> f_pop_funsig
R11767:11772 VST.veric.SeparationLogic <> funsig def
R11779:11779 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11828:11829 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11834:11834 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11797:11800 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11780:11780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11783:11785 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11795:11796 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11781:11782 cprogs.heap.program <> _a def
R11786:11789 compcert.exportclight.Clightdefs <> tptr def
R11791:11794 compcert.exportclight.Clightdefs <> tint def
R11821:11824 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11801:11801 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11807:11809 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11819:11820 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11802:11806 cprogs.heap.program <> _size def
R11810:11813 compcert.exportclight.Clightdefs <> tptr def
R11815:11818 compcert.exportclight.Clightdefs <> tint def
R11825:11827 Coq.Init.Datatypes <> nil constr
R11830:11833 compcert.exportclight.Clightdefs <> tint def
def 11849:11856 <> pop_spec
R11883:11886 cprogs.heap.program <> _pop def
R11888:11899 cprogs.heap.annotation <> f_pop_funsig def
R11901:11918 cprogs.heap.annotation <> f_pop_spec_complex def
def 11934:11943 <> f_pop_hint
R11952:11965 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R11966:11986 cprogs.heap.annotation <> f_pop_spec_annotation def
binder 11946:11949 <> para:63
R12000:12003 cprogs.heap.annotation <> para:63 var
R12014:12014 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12021:12022 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12028:12029 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12032:12033 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12041:12042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12045:12046 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12049:12050 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12056:12056 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12064:12072 Csplit.AClight <> Csequence constr
R12355:12363 Csplit.AClight <> Csequence constr
R12816:12824 Csplit.AClight <> Csequence constr
R13080:13088 Csplit.AClight <> Csequence constr
R13798:13804 Csplit.AClight <> Creturn constr
R13807:13810 Coq.Init.Datatypes <> Some constr
R13813:13822 compcert.cfrontend.Clight <> Econst_int constr
R13837:13840 compcert.exportclight.Clightdefs <> tint def
R13825:13832 compcert.lib.Integers Int repr def
R13101:13109 Csplit.AClight <> Csequence constr
R13191:13201 Csplit.AClight <> Cifthenelse constr
R13779:13783 Csplit.AClight <> Cskip constr
R13315:13323 Csplit.AClight <> Csequence constr
R13413:13417 Csplit.AClight <> Ccall constr
R13652:13652 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13676:13680 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13653:13660 compcert.cfrontend.Clight <> Etempvar constr
R13666:13669 compcert.exportclight.Clightdefs <> tptr def
R13671:13674 compcert.exportclight.Clightdefs <> tint def
R13662:13663 cprogs.heap.program <> _a def
R13681:13681 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13700:13723 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13682:13689 compcert.cfrontend.Clight <> Etempvar constr
R13696:13699 compcert.exportclight.Clightdefs <> tint def
R13691:13694 cprogs.heap.program <> _t'2 def
R13724:13724 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13753:13757 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13725:13734 compcert.cfrontend.Clight <> Econst_int constr
R13749:13752 compcert.exportclight.Clightdefs <> tint def
R13737:13744 compcert.lib.Integers Int repr def
R13758:13760 Coq.Init.Datatypes <> nil constr
R13443:13446 compcert.cfrontend.Clight <> Evar constr
R13455:13463 compcert.cfrontend.Ctypes <> Tfunction constr
R13620:13629 compcert.common.AST <> cc_default def
R13582:13586 compcert.exportclight.Clightdefs <> tvoid def
R13498:13502 compcert.cfrontend.Ctypes <> Tcons constr
R13551:13555 compcert.cfrontend.Ctypes <> Tcons constr
R13563:13567 compcert.cfrontend.Ctypes <> Tcons constr
R13574:13577 compcert.cfrontend.Ctypes <> Tnil constr
R13569:13572 compcert.exportclight.Clightdefs <> tint def
R13557:13560 compcert.exportclight.Clightdefs <> tint def
R13505:13508 compcert.exportclight.Clightdefs <> tptr def
R13510:13513 compcert.exportclight.Clightdefs <> tint def
R13448:13452 cprogs.heap.program <> _down def
R13419:13422 Coq.Init.Datatypes <> None constr
R13342:13345 Csplit.AClight <> Cset constr
R13353:13358 compcert.cfrontend.Clight <> Ederef constr
R13389:13392 compcert.exportclight.Clightdefs <> tint def
R13361:13368 compcert.cfrontend.Clight <> Etempvar constr
R13377:13380 compcert.exportclight.Clightdefs <> tptr def
R13382:13385 compcert.exportclight.Clightdefs <> tint def
R13370:13374 cprogs.heap.program <> _size def
R13347:13350 cprogs.heap.program <> _t'2 def
R13204:13209 compcert.cfrontend.Clight <> Ebinop constr
R13294:13297 compcert.exportclight.Clightdefs <> tint def
R13264:13273 compcert.cfrontend.Clight <> Econst_int constr
R13288:13291 compcert.exportclight.Clightdefs <> tint def
R13276:13283 compcert.lib.Integers Int repr def
R13216:13223 compcert.cfrontend.Clight <> Etempvar constr
R13230:13233 compcert.exportclight.Clightdefs <> tint def
R13225:13228 cprogs.heap.program <> _t'1 def
R13211:13213 compcert.cfrontend.Cop <> Oge constr
R13124:13127 Csplit.AClight <> Cset constr
R13135:13140 compcert.cfrontend.Clight <> Ederef constr
R13171:13174 compcert.exportclight.Clightdefs <> tint def
R13143:13150 compcert.cfrontend.Clight <> Etempvar constr
R13159:13162 compcert.exportclight.Clightdefs <> tptr def
R13164:13167 compcert.exportclight.Clightdefs <> tint def
R13152:13156 cprogs.heap.program <> _size def
R13129:13132 cprogs.heap.program <> _t'1 def
R12835:12843 Csplit.AClight <> Csequence constr
R12921:12927 Csplit.AClight <> Cassign constr
R12985:12990 compcert.cfrontend.Clight <> Ebinop constr
R13063:13066 compcert.exportclight.Clightdefs <> tint def
R13019:13028 compcert.cfrontend.Clight <> Econst_int constr
R13043:13046 compcert.exportclight.Clightdefs <> tint def
R13031:13038 compcert.lib.Integers Int repr def
R12998:13005 compcert.cfrontend.Clight <> Etempvar constr
R13012:13015 compcert.exportclight.Clightdefs <> tint def
R13007:13010 cprogs.heap.program <> _t'3 def
R12992:12995 compcert.cfrontend.Cop <> Osub constr
R12930:12935 compcert.cfrontend.Clight <> Ederef constr
R12966:12969 compcert.exportclight.Clightdefs <> tint def
R12938:12945 compcert.cfrontend.Clight <> Etempvar constr
R12954:12957 compcert.exportclight.Clightdefs <> tptr def
R12959:12962 compcert.exportclight.Clightdefs <> tint def
R12947:12951 cprogs.heap.program <> _size def
R12856:12859 Csplit.AClight <> Cset constr
R12867:12872 compcert.cfrontend.Clight <> Ederef constr
R12903:12906 compcert.exportclight.Clightdefs <> tint def
R12875:12882 compcert.cfrontend.Clight <> Etempvar constr
R12891:12894 compcert.exportclight.Clightdefs <> tptr def
R12896:12899 compcert.exportclight.Clightdefs <> tint def
R12884:12888 cprogs.heap.program <> _size def
R12861:12864 cprogs.heap.program <> _t'3 def
R12372:12380 Csplit.AClight <> Csequence constr
R12454:12462 Csplit.AClight <> Csequence constr
R12626:12632 Csplit.AClight <> Cassign constr
R12786:12793 compcert.cfrontend.Clight <> Etempvar constr
R12800:12803 compcert.exportclight.Clightdefs <> tint def
R12795:12798 cprogs.heap.program <> _t'5 def
R12647:12652 compcert.cfrontend.Clight <> Ederef constr
R12767:12770 compcert.exportclight.Clightdefs <> tint def
R12669:12674 compcert.cfrontend.Clight <> Ebinop constr
R12755:12758 compcert.exportclight.Clightdefs <> tptr def
R12760:12763 compcert.exportclight.Clightdefs <> tint def
R12724:12733 compcert.cfrontend.Clight <> Econst_int constr
R12748:12751 compcert.exportclight.Clightdefs <> tint def
R12736:12743 compcert.lib.Integers Int repr def
R12682:12689 compcert.cfrontend.Clight <> Etempvar constr
R12695:12698 compcert.exportclight.Clightdefs <> tptr def
R12700:12703 compcert.exportclight.Clightdefs <> tint def
R12691:12692 cprogs.heap.program <> _a def
R12676:12679 compcert.cfrontend.Cop <> Oadd constr
R12475:12478 Csplit.AClight <> Cset constr
R12498:12503 compcert.cfrontend.Clight <> Ederef constr
R12608:12611 compcert.exportclight.Clightdefs <> tint def
R12520:12525 compcert.cfrontend.Clight <> Ebinop constr
R12596:12599 compcert.exportclight.Clightdefs <> tptr def
R12601:12604 compcert.exportclight.Clightdefs <> tint def
R12559:12566 compcert.cfrontend.Clight <> Etempvar constr
R12573:12576 compcert.exportclight.Clightdefs <> tint def
R12568:12571 cprogs.heap.program <> _t'4 def
R12533:12540 compcert.cfrontend.Clight <> Etempvar constr
R12546:12549 compcert.exportclight.Clightdefs <> tptr def
R12551:12554 compcert.exportclight.Clightdefs <> tint def
R12542:12543 cprogs.heap.program <> _a def
R12527:12530 compcert.cfrontend.Cop <> Oadd constr
R12480:12483 cprogs.heap.program <> _t'5 def
R12391:12394 Csplit.AClight <> Cset constr
R12402:12407 compcert.cfrontend.Clight <> Ederef constr
R12438:12441 compcert.exportclight.Clightdefs <> tint def
R12410:12417 compcert.cfrontend.Clight <> Etempvar constr
R12426:12429 compcert.exportclight.Clightdefs <> tptr def
R12431:12434 compcert.exportclight.Clightdefs <> tint def
R12419:12423 cprogs.heap.program <> _size def
R12396:12399 cprogs.heap.program <> _t'4 def
R12079:12087 Csplit.AClight <> Csequence constr
R12157:12167 Csplit.AClight <> Cifthenelse constr
R12342:12346 Csplit.AClight <> Cskip constr
R12269:12275 Csplit.AClight <> Creturn constr
R12278:12281 Coq.Init.Datatypes <> Some constr
R12284:12288 compcert.cfrontend.Clight <> Eunop constr
R12326:12329 compcert.exportclight.Clightdefs <> tint def
R12296:12305 compcert.cfrontend.Clight <> Econst_int constr
R12320:12323 compcert.exportclight.Clightdefs <> tint def
R12308:12315 compcert.lib.Integers Int repr def
R12290:12293 compcert.cfrontend.Cop <> Oneg constr
R12170:12175 compcert.cfrontend.Clight <> Ebinop constr
R12254:12257 compcert.exportclight.Clightdefs <> tint def
R12224:12233 compcert.cfrontend.Clight <> Econst_int constr
R12248:12251 compcert.exportclight.Clightdefs <> tint def
R12236:12243 compcert.lib.Integers Int repr def
R12182:12189 compcert.cfrontend.Clight <> Etempvar constr
R12196:12199 compcert.exportclight.Clightdefs <> tint def
R12191:12194 cprogs.heap.program <> _t'6 def
R12177:12179 compcert.cfrontend.Cop <> Oeq constr
R12096:12099 Csplit.AClight <> Cset constr
R12107:12112 compcert.cfrontend.Clight <> Ederef constr
R12143:12146 compcert.exportclight.Clightdefs <> tint def
R12115:12122 compcert.cfrontend.Clight <> Etempvar constr
R12131:12134 compcert.exportclight.Clightdefs <> tptr def
R12136:12139 compcert.exportclight.Clightdefs <> tint def
R12124:12128 cprogs.heap.program <> _size def
R12101:12104 cprogs.heap.program <> _t'6 def
def 13868:13888 <> f_top_spec_annotation
R13895:13910 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
R13927:13930 utils.AClightNotations AClightNotations :::'ANNOTATION_WITH'_x_'..'_x_','_x not
binder 13911:13912 <> a0:65
binder 13914:13920 <> Maxsize:66
binder 13922:13923 <> Hl:67
binder 13925:13926 <> a':68
R13931:13932 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14062:14066 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14221:14221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13933:13939 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13970:13973 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13988:13991 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13999:14003 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13940:13943 Coq.ZArith.BinInt Z le def
R13954:13967 compcert.lib.Integers Int max_signed def
R13945:13951 cprogs.heap.annotation <> Maxsize:66 var
R13974:13977 Coq.ZArith.BinInt Z le def
R13981:13987 cprogs.heap.annotation <> Maxsize:66 var
R13994:13996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13992:13993 cprogs.heap.annotation <> a':68 var
R13997:13998 cprogs.heap.annotation <> a0:65 var
R14004:14010 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R14021:14024 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R14011:14014 FloydSeq.canon <> temp constr
R14019:14020 cprogs.heap.annotation <> a':68 var
R14016:14017 cprogs.heap.program <> _a def
R14025:14030 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R14060:14061 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R14031:14046 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14049:14049 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14052:14052 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14053:14059 cprogs.heap.annotation <> Maxsize:66 var
R14050:14051 cprogs.heap.annotation <> Hl:67 var
R14047:14048 cprogs.heap.annotation <> a0:65 var
R14068:14070 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R14079:14085 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
R14212:14212 FloydSeq.canon <> ::assert:'EX'_x_'..'_x_','_x not
binder 14071:14078 <> __return:69
R14086:14092 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R14132:14138 FloydSeq.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R14101:14104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14131:14131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14093:14100 cprogs.heap.annotation <> __return:69 var
R14105:14108 compcert.common.Values <> Vint constr
R14111:14129 cprogs.heap.definitions <> :::'IntRepr' not
R14120:14123 VST.floyd.sublist <> Znth def
R14127:14128 cprogs.heap.annotation <> Hl:67 var
R14139:14145 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R14169:14174 FloydSeq.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R14146:14149 FloydSeq.canon <> temp constr
R14161:14168 cprogs.heap.annotation <> __return:69 var
R14151:14159 cprogs.heap.annotation <> ___return def
R14175:14180 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R14210:14211 FloydSeq.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R14181:14196 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14199:14199 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14202:14202 cprogs.heap.definitions <> :::'store_int_array'_x_x_x not
R14203:14209 cprogs.heap.annotation <> Maxsize:66 var
R14200:14201 cprogs.heap.annotation <> Hl:67 var
R14197:14198 cprogs.heap.annotation <> a0:65 var
def 14236:14253 <> f_top_spec_complex
R14283:14303 cprogs.heap.annotation <> f_top_spec_annotation def
def 14319:14330 <> f_top_funsig
R14333:14338 VST.veric.SeparationLogic <> funsig def
R14345:14345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14370:14371 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14376:14376 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14363:14366 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14346:14346 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14349:14351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14361:14362 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14347:14348 cprogs.heap.program <> _a def
R14352:14355 compcert.exportclight.Clightdefs <> tptr def
R14357:14360 compcert.exportclight.Clightdefs <> tint def
R14367:14369 Coq.Init.Datatypes <> nil constr
R14372:14375 compcert.exportclight.Clightdefs <> tint def
def 14391:14398 <> top_spec
R14425:14428 cprogs.heap.program <> _top def
R14430:14441 cprogs.heap.annotation <> f_top_funsig def
R14443:14460 cprogs.heap.annotation <> f_top_spec_complex def
def 14476:14485 <> f_top_hint
R14494:14507 utils.AClightNotations <> :::'GET_PARA_TYPE'_x not
R14508:14528 cprogs.heap.annotation <> f_top_spec_annotation def
binder 14488:14491 <> para:70
R14542:14545 cprogs.heap.annotation <> para:70 var
R14556:14556 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14559:14560 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14568:14569 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14572:14573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14576:14576 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14584:14592 Csplit.AClight <> Csequence constr
R14736:14742 Csplit.AClight <> Creturn constr
R14745:14748 Coq.Init.Datatypes <> Some constr
R14751:14758 compcert.cfrontend.Clight <> Etempvar constr
R14765:14768 compcert.exportclight.Clightdefs <> tint def
R14760:14763 cprogs.heap.program <> _t'1 def
R14599:14602 Csplit.AClight <> Cset constr
R14616:14621 compcert.cfrontend.Clight <> Ederef constr
R14724:14727 compcert.exportclight.Clightdefs <> tint def
R14632:14637 compcert.cfrontend.Clight <> Ebinop constr
R14712:14715 compcert.exportclight.Clightdefs <> tptr def
R14717:14720 compcert.exportclight.Clightdefs <> tint def
R14671:14680 compcert.cfrontend.Clight <> Econst_int constr
R14695:14698 compcert.exportclight.Clightdefs <> tint def
R14683:14690 compcert.lib.Integers Int repr def
R14645:14652 compcert.cfrontend.Clight <> Etempvar constr
R14658:14661 compcert.exportclight.Clightdefs <> tptr def
R14663:14666 compcert.exportclight.Clightdefs <> tint def
R14654:14655 cprogs.heap.program <> _a def
R14639:14642 compcert.cfrontend.Cop <> Oadd constr
R14604:14607 cprogs.heap.program <> _t'1 def
def 14793:14797 <> Gprog
R14801:14808 VST.veric.mpred <> funspecs def
R14849:14852 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14840:14848 cprogs.heap.annotation <> swap_spec def
R14860:14863 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14853:14859 cprogs.heap.annotation <> up_spec def
R14873:14876 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14864:14872 cprogs.heap.annotation <> down_spec def
R14886:14889 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14877:14885 cprogs.heap.annotation <> push_spec def
R14898:14901 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14890:14897 cprogs.heap.annotation <> pop_spec def
R14910:14913 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14902:14909 cprogs.heap.annotation <> top_spec def
R14914:14916 Coq.Init.Datatypes <> nil constr
R14834:14837 cprogs.heap.program <> prog def
R14849:14852 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14840:14848 cprogs.heap.annotation <> swap_spec def
R14860:14863 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14853:14859 cprogs.heap.annotation <> up_spec def
R14873:14876 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14864:14872 cprogs.heap.annotation <> down_spec def
R14886:14889 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14877:14885 cprogs.heap.annotation <> push_spec def
R14898:14901 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14890:14897 cprogs.heap.annotation <> pop_spec def
R14910:14913 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14902:14909 cprogs.heap.annotation <> top_spec def
R14914:14916 Coq.Init.Datatypes <> nil constr
R14956:14968 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R14975:14976 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R14982:14983 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R14989:14989 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R14984:14988 cprogs.heap.annotation <> Gprog def
R14977:14981 cprogs.heap.definitions <> Vprog def
R14969:14974 cprogs.heap.program <> f_swap def
not 14931:14931 <> :::'Delta_specs_swap'
R15025:15031 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15038:15039 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15045:15046 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15052:15053 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15079:15080 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15083:15083 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15055:15057 Coq.Init.Datatypes <> nil constr
R15065:15067 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15060:15064 compcert.common.AST <> ident def
R15068:15077 VST.veric.seplog <> Annotation ind
R15047:15051 cprogs.heap.annotation <> Gprog def
R15040:15044 cprogs.heap.definitions <> Vprog def
R15032:15037 cprogs.heap.program <> f_swap def
not 15003:15003 <> :::'Delta_swap'_x
R15134:15146 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15151:15152 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15158:15159 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15165:15165 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15160:15164 cprogs.heap.annotation <> Gprog def
R15153:15157 cprogs.heap.definitions <> Vprog def
R15147:15150 cprogs.heap.program <> f_up def
not 15111:15111 <> :::'Delta_specs_up'
R15199:15205 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15210:15211 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15217:15218 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15224:15225 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15251:15252 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15255:15255 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15227:15229 Coq.Init.Datatypes <> nil constr
R15237:15239 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15232:15236 compcert.common.AST <> ident def
R15240:15249 VST.veric.seplog <> Annotation ind
R15219:15223 cprogs.heap.annotation <> Gprog def
R15212:15216 cprogs.heap.definitions <> Vprog def
R15206:15209 cprogs.heap.program <> f_up def
not 15179:15179 <> :::'Delta_up'_x
R15308:15320 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15327:15328 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15334:15335 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15341:15341 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15336:15340 cprogs.heap.annotation <> Gprog def
R15329:15333 cprogs.heap.definitions <> Vprog def
R15321:15326 cprogs.heap.program <> f_down def
not 15283:15283 <> :::'Delta_specs_down'
R15377:15383 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15390:15391 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15397:15398 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15404:15405 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15431:15432 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15435:15435 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15407:15409 Coq.Init.Datatypes <> nil constr
R15417:15419 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15412:15416 compcert.common.AST <> ident def
R15420:15429 VST.veric.seplog <> Annotation ind
R15399:15403 cprogs.heap.annotation <> Gprog def
R15392:15396 cprogs.heap.definitions <> Vprog def
R15384:15389 cprogs.heap.program <> f_down def
not 15355:15355 <> :::'Delta_down'_x
R15488:15500 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15507:15508 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15514:15515 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15521:15521 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15516:15520 cprogs.heap.annotation <> Gprog def
R15509:15513 cprogs.heap.definitions <> Vprog def
R15501:15506 cprogs.heap.program <> f_push def
not 15463:15463 <> :::'Delta_specs_push'
R15557:15563 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15570:15571 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15577:15578 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15584:15585 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15611:15612 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15615:15615 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15587:15589 Coq.Init.Datatypes <> nil constr
R15597:15599 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15592:15596 compcert.common.AST <> ident def
R15600:15609 VST.veric.seplog <> Annotation ind
R15579:15583 cprogs.heap.annotation <> Gprog def
R15572:15576 cprogs.heap.definitions <> Vprog def
R15564:15569 cprogs.heap.program <> f_push def
not 15535:15535 <> :::'Delta_push'_x
R15667:15679 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15685:15686 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15692:15693 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15699:15699 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15694:15698 cprogs.heap.annotation <> Gprog def
R15687:15691 cprogs.heap.definitions <> Vprog def
R15680:15684 cprogs.heap.program <> f_pop def
not 15643:15643 <> :::'Delta_specs_pop'
R15734:15740 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15746:15747 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15753:15754 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15760:15761 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15787:15788 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15791:15791 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15763:15765 Coq.Init.Datatypes <> nil constr
R15773:15775 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15768:15772 compcert.common.AST <> ident def
R15776:15785 VST.veric.seplog <> Annotation ind
R15755:15759 cprogs.heap.annotation <> Gprog def
R15748:15752 cprogs.heap.definitions <> Vprog def
R15741:15745 cprogs.heap.program <> f_pop def
not 15713:15713 <> :::'Delta_pop'_x
R15843:15855 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15861:15862 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15868:15869 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15875:15875 FloydSeq.proofauto <> :::'DELTA_SPECS'_'('_x_','_x_','_x_')' not
R15870:15874 cprogs.heap.annotation <> Gprog def
R15863:15867 cprogs.heap.definitions <> Vprog def
R15856:15860 cprogs.heap.program <> f_top def
not 15819:15819 <> :::'Delta_specs_top'
R15910:15916 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15922:15923 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15929:15930 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15936:15937 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15963:15964 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15967:15967 FloydSeq.proofauto <> :::'DELTA'_'('_x_','_x_','_x_','_x_','_x_')' not
R15939:15941 Coq.Init.Datatypes <> nil constr
R15949:15951 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R15944:15948 compcert.common.AST <> ident def
R15952:15961 VST.veric.seplog <> Annotation ind
R15931:15935 cprogs.heap.annotation <> Gprog def
R15924:15928 cprogs.heap.definitions <> Vprog def
R15917:15921 cprogs.heap.program <> f_top def
not 15889:15889 <> :::'Delta_top'_x
